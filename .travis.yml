#require sudi permissions
sudo: required
# services: docker in this case is required
services: 
  - docker
# before install final image, build an image to run tests 
before_install:
    # we use the dockerfile for dev. This is ideal for test. Also the image get tagged.
  - docker build -t 79709818/react-test -f ./client/Dockerfile.dev ./client
    # here we can add as many test build for each final image, for instance server or worker images

script:
  # this runs the test for the tagged image. When we use developer image, it wont actally 
  # get an exit code, so that is why  we use -- -- coverage option
  - docker run -e CI=true 79709818/react-test npm run test -- --coverage

after_success:
  - docker build -t 79709818/multi-client ./client
  - docker build -t 79709818/multi-nginx ./nginx
  - docker build -t 79709818/multi-server ./server
  - docker build -t 79709818/multi-worker ./worker

# Log into the docker hub CLI 
  - echo "$DOCKER_PASSWORD" | docker login -u "$DOCKER_ID" --password-stdin

# take those images and push them to docker hub
  - docker push 79709818/multi-client
  - docker push 79709818/multi-nginx 
  - docker push 79709818/multi-server
  - docker push 79709818/multi-worker

deploy:
  provider: elasticbeanstalk
  region: "us-east-1"
  app: "multi-docker"
  env: "MultiDocker-env-1"
  bucket_name: "elasticbeanstalk-us-east-1-965713583511"
  bucket_path: "docker-multi"
  on:
    branch: master
  access_key_id:
    secure: $AWS_ACCESS_KEY
  secret_access_key:
    secure: $AWS_SECRET_KEY